// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`HorizontalList Rendering renders itself correctly 1`] = `
<View
  style={
    Array [
      Object {},
    ]
  }
>
  <RCTScrollView
    data={
      Array [
        <Text>
          A
        </Text>,
      ]
    }
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={true}
    keyExtractor={[Function]}
    onContentSizeChange={[Function]}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    showsHorizontalScrollIndicator={false}
    stickyHeaderIndices={Array []}
    style={
      Array [
        Object {},
      ]
    }
    testID="list"
    viewabilityConfigCallbackPairs={Array []}
  >
    <View>
      <View
        onLayout={[Function]}
        style={
          Array [
            Object {
              "flexDirection": "row",
            },
            null,
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "marginLeft": 0,
                "marginRight": 0,
              },
            ]
          }
          testID="list-item"
        >
          <Text>
            A
          </Text>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`HorizontalList Rendering should render the link 1`] = `
<View
  style={
    Array [
      Object {},
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "space-between",
          "marginBottom": 22,
          "paddingHorizontal": 0,
        },
      ]
    }
  >
    <Text
      style={
        Array [
          Object {
            "color": "#1C2530",
            "fontFamily": "System",
            "fontSize": 20,
            "fontWeight": "700",
            "textAlign": "left",
          },
        ]
      }
      testID="title"
      variant="h2"
    />
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      nativeID="animatedComponent"
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID="link"
    >
      <Text
        style={
          Array [
            Object {
              "color": "#00AEFF",
              "fontFamily": "System",
              "fontSize": 18,
              "fontWeight": "500",
              "textAlign": "left",
            },
          ]
        }
        testID="link-label"
      >
        View All
      </Text>
    </View>
  </View>
  <RCTScrollView
    data={
      Array [
        <Text>
          A
        </Text>,
      ]
    }
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={true}
    keyExtractor={[Function]}
    onContentSizeChange={[Function]}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    showsHorizontalScrollIndicator={false}
    stickyHeaderIndices={Array []}
    style={
      Array [
        Object {},
      ]
    }
    testID="list"
    viewabilityConfigCallbackPairs={Array []}
  >
    <View>
      <View
        onLayout={[Function]}
        style={
          Array [
            Object {
              "flexDirection": "row",
            },
            null,
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "marginLeft": 0,
                "marginRight": 0,
              },
            ]
          }
          testID="list-item"
        >
          <Text>
            A
          </Text>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`HorizontalList Rendering should render the title when passed 1`] = `
<View
  style={
    Array [
      Object {},
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "space-between",
          "marginBottom": 22,
          "paddingHorizontal": 0,
        },
      ]
    }
  >
    <Text
      style={
        Array [
          Object {
            "color": "#1C2530",
            "fontFamily": "System",
            "fontSize": 20,
            "fontWeight": "700",
            "textAlign": "left",
          },
        ]
      }
      testID="title"
      variant="h2"
    >
      Categories
    </Text>
  </View>
  <RCTScrollView
    data={
      Array [
        <Text>
          A
        </Text>,
      ]
    }
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={true}
    keyExtractor={[Function]}
    onContentSizeChange={[Function]}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    showsHorizontalScrollIndicator={false}
    stickyHeaderIndices={Array []}
    style={
      Array [
        Object {},
      ]
    }
    testID="list"
    viewabilityConfigCallbackPairs={Array []}
  >
    <View>
      <View
        onLayout={[Function]}
        style={
          Array [
            Object {
              "flexDirection": "row",
            },
            null,
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "marginLeft": 0,
                "marginRight": 0,
              },
            ]
          }
          testID="list-item"
        >
          <Text>
            A
          </Text>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

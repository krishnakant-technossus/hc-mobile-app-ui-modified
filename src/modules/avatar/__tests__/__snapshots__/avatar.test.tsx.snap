// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Avatar Rendering renders correctly 1`] = `
<View
  accessible={true}
  collapsable={false}
  focusable={false}
  nativeID="animatedComponent"
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "height": 32,
      "justifyContent": "center",
      "opacity": 1,
      "overflow": "hidden",
      "width": 32,
    }
  }
  testID="avatar-button"
>
  <Image
    source={
      Object {
        "uri": "https://example.com/baby.jpg",
      }
    }
    style={
      Array [
        Object {
          "borderColor": "#FFFFFF",
          "borderRadius": 32,
          "borderWidth": 1,
          "height": "100%",
          "width": "100%",
        },
      ]
    }
    testID="avatar-image"
  />
</View>
`;

exports[`Avatar Rendering renders the passed marker correctly 1`] = `
<View
  accessible={true}
  collapsable={false}
  focusable={false}
  nativeID="animatedComponent"
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "height": 32,
      "justifyContent": "center",
      "opacity": 1,
      "overflow": "hidden",
      "width": 32,
    }
  }
  testID="avatar-button"
>
  <Image
    source={
      Object {
        "uri": "https://example.com/baby.jpg",
      }
    }
    style={
      Array [
        Object {
          "borderColor": "#FFFFFF",
          "borderRadius": 32,
          "borderWidth": 1,
          "height": "100%",
          "width": "100%",
        },
      ]
    }
    testID="avatar-image"
  />
  <View
    style={
      Array [
        Object {
          "borderRadius": 12,
          "bottom": 0,
          "overflow": "hidden",
          "position": "absolute",
          "right": 0,
        },
      ]
    }
    testID="avatar-marker"
  >
    <Text>
      O
    </Text>
  </View>
</View>
`;

exports[`Avatar Rendering renders with the passed size 1`] = `
<View
  accessible={true}
  collapsable={false}
  focusable={false}
  nativeID="animatedComponent"
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "height": 240,
      "justifyContent": "center",
      "opacity": 1,
      "overflow": "hidden",
      "width": 240,
    }
  }
  testID="avatar-button"
>
  <Image
    source={
      Object {
        "uri": "https://example.com/baby.jpg",
      }
    }
    style={
      Array [
        Object {
          "borderColor": "#FFFFFF",
          "borderRadius": 240,
          "borderWidth": 1,
          "height": "100%",
          "width": "100%",
        },
      ]
    }
    testID="avatar-image"
  />
</View>
`;

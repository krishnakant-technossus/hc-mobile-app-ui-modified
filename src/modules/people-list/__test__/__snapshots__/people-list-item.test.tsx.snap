// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`UserItem Interactions should call the onPress method when card is pressed 1`] = `
<View
  leftActionActivationDistance={0}
  leftActionReleaseAnimationConfig={null}
  leftActionReleaseAnimationFn={null}
  leftButtonWidth={85}
  leftButtonsActivationDistance={75}
  leftButtonsCloseReleaseAnimationConfig={null}
  leftButtonsCloseReleaseAnimationFn={null}
  leftButtonsOpenReleaseAnimationConfig={null}
  leftButtonsOpenReleaseAnimationFn={null}
  onLayout={[Function]}
  onLeftActionActivate={[Function]}
  onLeftActionComplete={[Function]}
  onLeftActionDeactivate={[Function]}
  onLeftActionRelease={[Function]}
  onLeftButtonsActivate={[Function]}
  onLeftButtonsCloseComplete={[Function]}
  onLeftButtonsCloseRelease={[Function]}
  onLeftButtonsDeactivate={[Function]}
  onLeftButtonsOpenComplete={[Function]}
  onLeftButtonsOpenRelease={[Function]}
  onMoveShouldSetResponder={[Function]}
  onMoveShouldSetResponderCapture={[Function]}
  onPanAnimatedValueRef={[Function]}
  onRef={[Function]}
  onResponderEnd={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderReject={[Function]}
  onResponderRelease={[Function]}
  onResponderStart={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onRightActionActivate={[Function]}
  onRightActionComplete={[Function]}
  onRightActionDeactivate={[Function]}
  onRightActionRelease={[Function]}
  onRightButtonsActivate={[Function]}
  onRightButtonsCloseComplete={[Function]}
  onRightButtonsCloseRelease={[Function]}
  onRightButtonsDeactivate={[Function]}
  onRightButtonsOpenComplete={[Function]}
  onRightButtonsOpenRelease={[Function]}
  onStartShouldSetResponder={[Function]}
  onStartShouldSetResponderCapture={[Function]}
  onSwipeComplete={[Function]}
  onSwipeMove={[Function]}
  onSwipeRelease={[Function]}
  onSwipeStart={[Function]}
  rightActionActivationDistance={125}
  rightActionReleaseAnimationConfig={null}
  rightActionReleaseAnimationFn={null}
  rightButtonWidth={85}
  rightButtonsActivationDistance={75}
  rightButtonsCloseReleaseAnimationConfig={null}
  rightButtonsCloseReleaseAnimationFn={null}
  rightButtonsOpenReleaseAnimationConfig={null}
  rightButtonsOpenReleaseAnimationFn={null}
  style={
    Array [
      Object {
        "flexDirection": "row",
      },
      undefined,
    ]
  }
  swipeReleaseAnimationConfig={
    Object {
      "duration": 250,
      "easing": [Function],
      "toValue": Object {
        "x": 0,
        "y": 0,
      },
    }
  }
  swipeReleaseAnimationFn={[Function]}
  swipeStartMinDistance={15}
>
  <View
    collapsable={false}
    nativeID="animatedComponent"
    style={
      Object {
        "flex": 1,
        "transform": Array [
          Object {
            "translateX": 0,
          },
        ],
      }
    }
  >
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      nativeID="animatedComponent"
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignSelf": "center",
          "opacity": 1,
          "width": "100%",
        }
      }
      testID="link-wrapper"
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "#FFFFFF",
              "flexDirection": "row",
              "paddingBottom": 20,
              "paddingLeft": 20,
              "paddingRight": 10,
              "paddingTop": 20,
            },
          ]
        }
        testID="main-wrapper"
      >
        <View
          style={
            Array [
              Object {
                "flexDirection": "row",
                "justifyContent": "center",
              },
            ]
          }
        >
          <View
            accessible={true}
            collapsable={false}
            focusable={false}
            nativeID="animatedComponent"
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 40,
                "justifyContent": "center",
                "opacity": 1,
                "overflow": "hidden",
                "width": 40,
              }
            }
            testID="avatar-button"
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#EDF1F5",
                    "borderColor": "#DBE0E3",
                    "borderRadius": 10,
                    "borderWidth": 1,
                    "height": "100%",
                    "justifyContent": "center",
                    "width": "100%",
                  },
                ]
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#1C2530",
                      "fontFamily": "System",
                      "fontSize": 12,
                      "fontStyle": "normal",
                      "fontWeight": "600",
                      "textAlign": "left",
                    },
                  ]
                }
                testID="text"
                weight="semiBold"
              >
                SJ
              </Text>
            </View>
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "paddingLeft": 10,
                "width": "82%",
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "width": "78%",
                  },
                ]
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#1C2530",
                      "fontFamily": "System",
                      "fontSize": 18,
                      "fontWeight": "700",
                      "maxWidth": "86%",
                      "textAlign": "left",
                    },
                  ]
                }
                testID="heading"
                variant="h3"
              >
                Stephen John
              </Text>
            </View>
            <Text
              style={
                Array [
                  Object {
                    "alignSelf": "flex-end",
                    "color": "#97A4AB",
                    "fontFamily": "System",
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "minWidth": "27%",
                    "textAlign": "right",
                  },
                ]
              }
              testID="user-id"
            >
              ID:
              512345
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`UserItem Rendering hides icon when it is null 1`] = `
<View
  leftActionActivationDistance={0}
  leftActionReleaseAnimationConfig={null}
  leftActionReleaseAnimationFn={null}
  leftButtonWidth={85}
  leftButtonsActivationDistance={75}
  leftButtonsCloseReleaseAnimationConfig={null}
  leftButtonsCloseReleaseAnimationFn={null}
  leftButtonsOpenReleaseAnimationConfig={null}
  leftButtonsOpenReleaseAnimationFn={null}
  onLayout={[Function]}
  onLeftActionActivate={[Function]}
  onLeftActionComplete={[Function]}
  onLeftActionDeactivate={[Function]}
  onLeftActionRelease={[Function]}
  onLeftButtonsActivate={[Function]}
  onLeftButtonsCloseComplete={[Function]}
  onLeftButtonsCloseRelease={[Function]}
  onLeftButtonsDeactivate={[Function]}
  onLeftButtonsOpenComplete={[Function]}
  onLeftButtonsOpenRelease={[Function]}
  onMoveShouldSetResponder={[Function]}
  onMoveShouldSetResponderCapture={[Function]}
  onPanAnimatedValueRef={[Function]}
  onRef={[Function]}
  onResponderEnd={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderReject={[Function]}
  onResponderRelease={[Function]}
  onResponderStart={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onRightActionActivate={[Function]}
  onRightActionComplete={[Function]}
  onRightActionDeactivate={[Function]}
  onRightActionRelease={[Function]}
  onRightButtonsActivate={[Function]}
  onRightButtonsCloseComplete={[Function]}
  onRightButtonsCloseRelease={[Function]}
  onRightButtonsDeactivate={[Function]}
  onRightButtonsOpenComplete={[Function]}
  onRightButtonsOpenRelease={[Function]}
  onStartShouldSetResponder={[Function]}
  onStartShouldSetResponderCapture={[Function]}
  onSwipeComplete={[Function]}
  onSwipeMove={[Function]}
  onSwipeRelease={[Function]}
  onSwipeStart={[Function]}
  rightActionActivationDistance={125}
  rightActionReleaseAnimationConfig={null}
  rightActionReleaseAnimationFn={null}
  rightButtonWidth={85}
  rightButtonsActivationDistance={75}
  rightButtonsCloseReleaseAnimationConfig={null}
  rightButtonsCloseReleaseAnimationFn={null}
  rightButtonsOpenReleaseAnimationConfig={null}
  rightButtonsOpenReleaseAnimationFn={null}
  style={
    Array [
      Object {
        "flexDirection": "row",
      },
      undefined,
    ]
  }
  swipeReleaseAnimationConfig={
    Object {
      "duration": 250,
      "easing": [Function],
      "toValue": Object {
        "x": 0,
        "y": 0,
      },
    }
  }
  swipeReleaseAnimationFn={[Function]}
  swipeStartMinDistance={15}
>
  <View
    collapsable={false}
    nativeID="animatedComponent"
    style={
      Object {
        "flex": 1,
        "transform": Array [
          Object {
            "translateX": 0,
          },
        ],
      }
    }
  >
    <View
      accessible={true}
      collapsable={false}
      focusable={false}
      nativeID="animatedComponent"
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignSelf": "center",
          "opacity": 1,
          "width": "100%",
        }
      }
      testID="link-wrapper"
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "#FFFFFF",
              "flexDirection": "row",
              "paddingBottom": 20,
              "paddingLeft": 20,
              "paddingRight": 10,
              "paddingTop": 20,
            },
          ]
        }
        testID="main-wrapper"
      >
        <View
          style={
            Array [
              Object {
                "flexDirection": "row",
                "justifyContent": "center",
              },
            ]
          }
        >
          <View
            accessible={true}
            collapsable={false}
            focusable={false}
            nativeID="animatedComponent"
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 40,
                "justifyContent": "center",
                "opacity": 1,
                "overflow": "hidden",
                "width": 40,
              }
            }
            testID="avatar-button"
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#EDF1F5",
                    "borderColor": "#DBE0E3",
                    "borderRadius": 10,
                    "borderWidth": 1,
                    "height": "100%",
                    "justifyContent": "center",
                    "width": "100%",
                  },
                ]
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#1C2530",
                      "fontFamily": "System",
                      "fontSize": 12,
                      "fontStyle": "normal",
                      "fontWeight": "600",
                      "textAlign": "left",
                    },
                  ]
                }
                testID="text"
                weight="semiBold"
              >
                SJ
              </Text>
            </View>
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "paddingLeft": 10,
                "width": "82%",
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "width": "78%",
                  },
                ]
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#1C2530",
                      "fontFamily": "System",
                      "fontSize": 18,
                      "fontWeight": "700",
                      "maxWidth": "86%",
                      "textAlign": "left",
                    },
                  ]
                }
                testID="heading"
                variant="h3"
              >
                Stephen John
              </Text>
            </View>
            <Text
              style={
                Array [
                  Object {
                    "alignSelf": "flex-end",
                    "color": "#97A4AB",
                    "fontFamily": "System",
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "minWidth": "27%",
                    "textAlign": "right",
                  },
                ]
              }
              testID="user-id"
            >
              ID:
              512345
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`UserItem Rendering should render properly 1`] = `
<View
  leftActionActivationDistance={0}
  leftActionReleaseAnimationConfig={null}
  leftActionReleaseAnimationFn={null}
  leftButtonWidth={85}
  leftButtonsActivationDistance={75}
  leftButtonsCloseReleaseAnimationConfig={null}
  leftButtonsCloseReleaseAnimationFn={null}
  leftButtonsOpenReleaseAnimationConfig={null}
  leftButtonsOpenReleaseAnimationFn={null}
  onLayout={[Function]}
  onLeftActionActivate={[Function]}
  onLeftActionComplete={[Function]}
  onLeftActionDeactivate={[Function]}
  onLeftActionRelease={[Function]}
  onLeftButtonsActivate={[Function]}
  onLeftButtonsCloseComplete={[Function]}
  onLeftButtonsCloseRelease={[Function]}
  onLeftButtonsDeactivate={[Function]}
  onLeftButtonsOpenComplete={[Function]}
  onLeftButtonsOpenRelease={[Function]}
  onMoveShouldSetResponder={[Function]}
  onMoveShouldSetResponderCapture={[Function]}
  onPanAnimatedValueRef={[Function]}
  onRef={[Function]}
  onResponderEnd={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderReject={[Function]}
  onResponderRelease={[Function]}
  onResponderStart={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onRightActionActivate={[Function]}
  onRightActionComplete={[Function]}
  onRightActionDeactivate={[Function]}
  onRightActionRelease={[Function]}
  onRightButtonsActivate={[Function]}
  onRightButtonsCloseComplete={[Function]}
  onRightButtonsCloseRelease={[Function]}
  onRightButtonsDeactivate={[Function]}
  onRightButtonsOpenComplete={[Function]}
  onRightButtonsOpenRelease={[Function]}
  onStartShouldSetResponder={[Function]}
  onStartShouldSetResponderCapture={[Function]}
  onSwipeComplete={[Function]}
  onSwipeMove={[Function]}
  onSwipeRelease={[Function]}
  onSwipeStart={[Function]}
  rightActionActivationDistance={125}
  rightActionReleaseAnimationConfig={null}
  rightActionReleaseAnimationFn={null}
  rightButtonWidth={85}
  rightButtonsActivationDistance={75}
  rightButtonsCloseReleaseAnimationConfig={null}
  rightButtonsCloseReleaseAnimationFn={null}
  rightButtonsOpenReleaseAnimationConfig={null}
  rightButtonsOpenReleaseAnimationFn={null}
  style={
    Array [
      Object {
        "flexDirection": "row",
      },
      undefined,
    ]
  }
  swipeReleaseAnimationConfig={
    Object {
      "duration": 250,
      "easing": [Function],
      "toValue": Object {
        "x": 0,
        "y": 0,
      },
    }
  }
  swipeReleaseAnimationFn={[Function]}
  swipeStartMinDistance={15}
>
  <View
    collapsable={false}
    nativeID="animatedComponent"
    style={
      Object {
        "flex": 1,
        "transform": Array [
          Object {
            "translateX": 0,
          },
        ],
      }
    }
  >
    <View
      accessible={true}
      collapsable={false}
      focusable={false}
      nativeID="animatedComponent"
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignSelf": "center",
          "opacity": 1,
          "width": "100%",
        }
      }
      testID="link-wrapper"
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "#FFFFFF",
              "flexDirection": "row",
              "paddingBottom": 20,
              "paddingLeft": 20,
              "paddingRight": 10,
              "paddingTop": 20,
            },
          ]
        }
        testID="main-wrapper"
      >
        <View
          style={
            Array [
              Object {
                "flexDirection": "row",
                "justifyContent": "center",
              },
            ]
          }
        >
          <View
            accessible={true}
            collapsable={false}
            focusable={false}
            nativeID="animatedComponent"
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 40,
                "justifyContent": "center",
                "opacity": 1,
                "overflow": "hidden",
                "width": 40,
              }
            }
            testID="avatar-button"
          >
            <Image
              source={
                Object {
                  "uri": "https://www.google.com",
                }
              }
              style={
                Array [
                  Object {
                    "borderColor": "#FFFFFF",
                    "borderRadius": 10,
                    "borderWidth": 1,
                    "height": "100%",
                    "width": "100%",
                  },
                ]
              }
              testID="avatar-image"
            />
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "paddingLeft": 10,
                "width": "82%",
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "width": "78%",
                  },
                ]
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#1C2530",
                      "fontFamily": "System",
                      "fontSize": 18,
                      "fontWeight": "700",
                      "maxWidth": "86%",
                      "textAlign": "left",
                    },
                  ]
                }
                testID="heading"
                variant="h3"
              >
                Stephen John
              </Text>
            </View>
            <Text
              style={
                Array [
                  Object {
                    "alignSelf": "flex-end",
                    "color": "#97A4AB",
                    "fontFamily": "System",
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "minWidth": "27%",
                    "textAlign": "right",
                  },
                ]
              }
              testID="user-id"
            >
              ID:
              512345
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;
